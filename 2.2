#include <iostream>
using namespace std;
 
  int damage_sword = 2;
  char answer;
  int dodge;
  int d20;
  int ding;
  
  struct player
  {
    int hp;
    int melee;
  };

int main()
{
  player p1;
  p1.hp = 30;
  p1.melee = 3;

  player p2;
  p2.hp = 25;
  p2.melee = 2;

  srand(time(NULL));
    while ((p1.hp > 0) && (p2.hp > 0)) {
        cout << "do you want to attack using sword? typ y.\n";
        cin >> answer;
        if (answer == 'y'){
          dodge = random() % 20 + 1;
          d20 = random() % 20 + 1;
          cout<<"\nFor d20 you rolled "<<d20<<"\nAnd your opponent rolled "<<dodge<<" for dodge\n";
            switch (d20) {
            case 20:
                if (dodge == 20) {
                    p2.hp -= (damage_sword + p1.melee);
                    cout << "you hit your opponent for " << damage_sword + p1.melee << "\n";
                }
                else {
                    p2.hp = ((damage_sword + p1.melee) * 2);
                    cout << "you hit your opponent for " << (damage_sword + p1.melee) * 2 << "\n";
                }
                break;

            case 1:
                p1.hp -= damage_sword;
                cout << "you hit yourself for " << damage_sword << "\n";

                break;

            default:
                if (d20 + p1.melee > dodge) {
                    p2.hp -= damage_sword + p1.melee;
                    cout << "you hit your opponent for " << damage_sword + p1.melee << endl;
                }
                else {
                    cout << "you missed your hit or your opponent dodged it.\n";
                }
                break;
            }
            // opponents turn to attack
            cout<<"\n";
            dodge = random() % 20 + 1;
            d20 = random() % 20 + 1;

            cout<<"for dodge you rolled "<<dodge<<endl;
            cout<<"your opponent rolled "<<d20<<endl;

            switch (d20){
              case 20:
                if (dodge == 20) {
                p1.hp -= (damage_sword + p2.melee);
                cout << "your opponent dealt " << damage_sword + p2.melee << " damage\n";
                }
                else {
                p1.hp -= ((damage_sword + p2.melee) * 2);
                cout << "your opponent made a critical hit and you got " << (damage_sword + p2.melee) * 2 << "damage\n";
                }

              break;
              
              case 1:
                p2.hp -= damage_sword;
                cout<<"your opponent hit himself\n";

              break;

              default:
                if (d20+p2.melee > dodge){
                  p1.hp -= (damage_sword + p2.melee);
                  cout<<"your opponent dealt "<<damage_sword + p2.melee<<" damage\n";
                }
                else{
                  cout<<"you dodged the hit\n";
                }
              break;
  
            }
          }
          cout << "\nyou have " << p1.hp << " hp left.\nYour opponent has " << p2.hp << " left\n\n";
        
    }

    if (p1.hp <= 0) {
        cout << "you lost try again" << endl;
    }
    else if (p2.hp <= 0) {
        cout << "you have won good job" << endl;
        cout << "you have " << p1.hp << " hp left \n";
    }
}
